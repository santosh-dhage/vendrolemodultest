# Generated by Django 5.0.3 on 2024-06-10 08:05

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('machinedataapp', '0002_initial'),
        ('tenant', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_from_email', models.EmailField(blank=True, max_length=1000, null=True)),
                ('email_host', models.CharField(blank=True, max_length=100, null=True)),
                ('email_port', models.IntegerField(blank=True, null=True)),
                ('email_host_user', models.EmailField(blank=True, max_length=254, null=True)),
                ('email_host_password', models.CharField(blank=True, max_length=100, null=True)),
                ('email_use_tls', models.BooleanField(blank=True, default=True, null=True)),
                ('email_fail_silently', models.BooleanField(blank=True, default=False, null=True)),
                ('use_ssl', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id', models.CharField(blank=True, max_length=50, null=True)),
                ('aid', models.CharField(blank=True, max_length=50, null=True)),
                ('tid', models.CharField(blank=True, max_length=50, null=True)),
                ('rid', models.CharField(blank=True, max_length=50, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_id', models.CharField(max_length=50)),
                ('capacity', models.IntegerField()),
                ('stock', models.IntegerField()),
                ('status', models.CharField(max_length=50)),
                ('mode', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_id', models.CharField(blank=True, max_length=255, null=True)),
                ('merchant_name', models.CharField(blank=True, max_length=255, null=True)),
                ('simulator_key_profile', models.CharField(blank=True, max_length=255, null=True)),
                ('salt_key', models.CharField(blank=True, max_length=255, null=True)),
                ('salt_index', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_id', models.CharField(blank=True, max_length=255, null=True)),
                ('callback_url', models.URLField(blank=True, null=True)),
                ('simulator_qr_profile', models.CharField(blank=True, max_length=255, null=True)),
                ('qrcode_id', models.CharField(blank=True, max_length=255, null=True)),
                ('store_id', models.CharField(blank=True, max_length=255, null=True)),
                ('terminal_id', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RefillStockHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id_store', models.CharField(blank=True, max_length=50, null=True)),
                ('stock_before_refill', models.IntegerField(blank=True, null=True)),
                ('stock_after_refill', models.IntegerField(blank=True, null=True)),
                ('refill_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('total_refill', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('organization', models.CharField(blank=True, max_length=100, null=True)),
                ('spoc_id', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('mobile_no', models.CharField(blank=True, max_length=15, null=True)),
                ('address1', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('landmark', models.CharField(blank=True, max_length=100, null=True)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('role', models.CharField(blank=True, choices=[('1', 'Superuser'), ('2', 'Admin'), ('3', 'Customer'), ('4', 'User')], default='4', max_length=1, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.BooleanField(blank=True, default=True, null=True)),
                ('profile_img', models.ImageField(blank=True, default='anonymous.jpg', null=True, upload_to='images/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('permissions', models.ManyToManyField(blank=True, related_name='custompermission_users_permission', to='machinedataapp.custompermission')),
                ('rolesname', models.ManyToManyField(blank=True, related_name='users_rolesname_permisiiom', to='machinedataapp.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MQTTData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=255)),
                ('payload', models.JSONField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('m_id', models.CharField(blank=True, max_length=50, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('stock', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('mode', models.CharField(blank=True, max_length=50, null=True)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tenant.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_payment_mode', models.CharField(blank=True, max_length=10, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('machine_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='userapp.mstatus')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
