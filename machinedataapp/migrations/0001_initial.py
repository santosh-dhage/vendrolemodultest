# Generated by Django 5.0.3 on 2024-04-06 12:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ColorStore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("color_name", models.CharField(blank=True, max_length=100, null=True)),
                ("color_code", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="MachineMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "machine_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "manufacturer",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "payment_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "machinelease",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("production_date", models.DateField(blank=True, null=True)),
                ("warranty_expiry_date", models.DateField(blank=True, null=True)),
                (
                    "maintenance_schedule",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("last_maintenance_date", models.DateField(blank=True, null=True)),
                (
                    "installation_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("power_rating", models.FloatField(blank=True, null=True)),
                (
                    "serial_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("weight", models.FloatField(blank=True, null=True)),
                ("purchase_date", models.DateField(blank=True, null=True)),
                (
                    "purchase_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("usage_hours", models.IntegerField(blank=True, default=0, null=True)),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="MachineUserMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_user_date", models.DateTimeField(blank=True, null=True)),
                ("assigned_customer_date", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("created_by", models.IntegerField(blank=True, null=True)),
                ("updated_by", models.IntegerField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ModelCapacity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("model_no", models.CharField(blank=True, max_length=100, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("created_by", models.IntegerField(blank=True, null=True)),
                ("updated_by", models.IntegerField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "product_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("amount", models.IntegerField(blank=True, default=0, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("created_by", models.IntegerField(blank=True, null=True)),
                ("updated_by", models.IntegerField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="QrCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "qr",
                    models.FileField(blank=True, null=True, upload_to="qr_codes_image"),
                ),
                (
                    "qr_store_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "qr_store_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("qr_code_id", models.CharField(blank=True, max_length=100, null=True)),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_by", models.IntegerField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="SiteSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("logo", models.ImageField(upload_to="logos/")),
                (
                    "favicon",
                    models.ImageField(
                        blank=True,
                        default="favicon.jpg",
                        null=True,
                        upload_to="favicons/",
                    ),
                ),
            ],
        ),
    ]
